package jo.presentation;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

import jo.business.Equipe;
import jo.business.Match;

public class JframeInfoMatch extends JFrame {
	private Match m;
	private JPanel contentPane;
	private ArrayList<JLabel> aJLabel = new ArrayList<JLabel>();
	int compteur= 0; // pr la creation des jlabels

	/**
	 * Launch the application.
	 */

	/**
	 * Create the frame.
	 */
	public JframeInfoMatch(Match m) {
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(500, 400, 600, 400);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		contentPane.setLayout(null);
		setVisible(true);
		this.m = m;	
		drawArrayJeux();
		drawArrayTieBreak();
	}
 

	private void drawArrayJeux() {
		int[][] a = m.getResultatJeux();
		int x=0;
		int y=150;
		int decaleur=1; // decale vers le dessus ou le dessous pr comparer les resultats
		for(int i=0 ; i<2; i++) {
			for(int j=0; j<a[i].length; j++) {
				if(!(a[i][j]==0 && a[i+decaleur][j]==0)) {
					aJLabel.add(new JLabel(a[i][j]+"", SwingConstants.CENTER));
					aJLabel.get(compteur).setBounds(x+=40, y, 40, 40);
					aJLabel.get(compteur).setBorder(new LineBorder(new Color(0, 0, 0)));
					contentPane.add(aJLabel.get(compteur++));	
				}			
			}
			// inscription des labels des joueurs
			for(Equipe e : m.getEquipes()) {
				if(e.getA().size()==1) {
					aJLabel.add(new JLabel(e.getA().get(0).getNom()));
					aJLabel.get(compteur).setBounds(x+100, y, 150, 40);					
				}
				else {
					aJLabel.add(new JLabel(e.getA().get(0).getNom() + " / " + e.getA().get(1).getNom()));
					aJLabel.get(compteur).setBounds(x+100, y, 200 , 40);
				}
			}
			contentPane.add(aJLabel.get(compteur));	
			y+=40;
			x=0;
			decaleur*=-1;
		}
	}
	private void drawArrayTieBreak() {
		int[][] a = m.getResultatTieBreaks();
		int x=40;
		int y=250;
		int decaleur=1;
		for(int i=0 ; i<2; i++) {
			for(int j=0; j<a[i].length; j++) {
				if(!(a[i][j]==0 && a[i+decaleur][j]==0)) {
					aJLabel.add(new JLabel(a[i][j]+"", SwingConstants.CENTER));
					aJLabel.get(compteur).setBounds(x, y, 40, 40);
					aJLabel.get(compteur).setBorder(new LineBorder(new Color(0, 0, 0)));
					contentPane.add(aJLabel.get(compteur++));	
				}
				x+=40;
			}
			y+=40;
			x=40;
			decaleur*=-1;
		}
	}
}
