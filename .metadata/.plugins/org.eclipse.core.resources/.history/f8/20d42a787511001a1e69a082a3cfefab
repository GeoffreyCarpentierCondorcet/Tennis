package jo.presentation;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

import jo.business.Equipe;
import jo.business.Match;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;

public class JframeGroupe extends JFrame {
	private ArrayList<List<Match>> aTours= new ArrayList<List<Match>>();
	private ArrayList<JLabel> aJLabel = new ArrayList<JLabel>();
	private int compteur=0;
	private JPanel contentPane;
	private int w=80;
	private int h=25;
	private int i=0;

	/**
	 * Launch the application.
	 */

	/**
	 * Create the frame.
	 */
	public JframeGroupe(List<Match> tour1, List<Match> tour2, List<Match> tour3, List<Match> tour4, List<Match> tour5) {
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(0, 0, 1920, 1040);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		setVisible(true);

		
		aTours.add(tour1);
		aTours.add(tour2);
		aTours.add(tour3);
		aTours.add(tour4);
		aTours.add(tour5);
			
		
		int x=10; // position
		int y=60; // position
		int w=80; 
		int h=25;  

		drawTour(aTours.get(0), 10, 60, 5);
		drawTour(aTours.get(1), 310, 87, 60);
		drawTour(aTours.get(2), 610, 140, 170);
		drawTour(aTours.get(3), 910, 252, 395);
		drawTour(aTours.get(4), 1210, 465, 0);
		
		

	}
	private void drawTour(List<Match> lm, int x, int y, int intervale){	
		for(Match m :lm) {			
			for(Equipe e : m.getEquipes()) {
				if(e.getA().size()==1) {
					aJLabel.add(new JLabel(e.getA().get(0).getNom(),SwingConstants.CENTER));
					aJLabel.get(compteur++).setBounds(x, y, w, h);
					aJLabel.add(new JLabel(m.getResultat()[i++]+"", SwingConstants.CENTER));
					aJLabel.get(compteur--).setBounds(x+w, y, 20, h);
					
				}
				else {
					aJLabel.add(new JLabel(e.getA().get(0).getNom() + " / " + e.getA().get(1).getNom(), SwingConstants.CENTER));
					aJLabel.get(compteur++).setBounds(x, y, w+80, h);
					aJLabel.add(new JLabel(m.getResultat()[i++]+"", SwingConstants.CENTER));
					aJLabel.get(compteur--).setBounds(x+w+80, y, 20, h);
				}
				aJLabel.get(compteur).setBorder(new LineBorder(new Color(0, 0, 0))); 
				/*aJLabel.get(compteur).addMouseListener(new MouseAdapter() { // methode anonyme mais alors pas de passage d'objet !
					public final void mouseEntered(MouseEvent ev) {
						ev.getComponent().setVisible(false);
					}
				});*/
				aJLabel.get(compteur).addMouseListener(new LabelAdapter(m, x, y, i));
				compteur++;
				aJLabel.get(compteur--).setBorder(new LineBorder(new Color(0, 0, 0)));
				contentPane.add(aJLabel.get(compteur++));
				contentPane.add(aJLabel.get(compteur++));
				y+=25;	
			}	
			y+=intervale;
			i=0;
		}
	}
	private class LabelAdapter extends MouseAdapter {
		Match m;
		int x;
		int y;
		int i;
		public LabelAdapter(Match m, int x, int y, int i) {
			super();
			this.m = m;
			this.x = x;
			this.y = y;
			this.i = i;
		}
		public final void mouseEntered(MouseEvent ev) {
			ev.getComponent().setForeground(Color.BLUE);
			JLabel labelInfos = new JLabel(m.getDate().format(DateTimeFormatter.ISO_DATE_TIME));
			aJLabel.add(labelInfos);
			labelInfos.setBounds(x+20, y-30, 200, 25);
			if(i==1) labelInfos.setBounds(x+20, y-55, 200, 25);
			labelInfos.setBorder(new LineBorder(new Color(0, 0, 0)));
			labelInfos.setForeground(Color.BLUE);
			labelInfos.setVisible(true);
			contentPane.add(labelInfos);
			setContentPane(contentPane);
			
		}
		public final void mouseExited(MouseEvent ev) {
			ev.getComponent().setForeground(Color.BLACK);
			contentPane.remove(aJLabel.get(aJLabel.size()-1));
			aJLabel.remove(aJLabel.size()-1);
			setContentPane(contentPane);
		}
		
	}

	
}

